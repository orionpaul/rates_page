{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/orionpaul/Documents/projects/rates/app/admin/dashboard/users/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { User } from '@/types';\n\nexport default function UsersManagementPage() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const { userData } = useAuth();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    role: 'editor' as 'admin' | 'editor',\n  });\n\n  useEffect(() => {\n    if (userData?.role !== 'admin') {\n      alert('Access denied. Admin only.');\n      return;\n    }\n    fetchUsers();\n  }, [userData]);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (data && !error) {\n        const usersData = data.map(row => ({\n          uid: row.uid,\n          email: row.email,\n          role: row.role as 'admin' | 'editor',\n          createdAt: new Date(row.created_at),\n          createdBy: row.created_by,\n        }));\n        setUsers(usersData);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async () => {\n    try {\n      // Create Firebase Auth user\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        formData.email,\n        formData.password\n      );\n\n      // Add user document to Supabase\n      const { error } = await supabase\n        .from('users')\n        .insert([{\n          uid: userCredential.user.uid,\n          email: formData.email,\n          role: formData.role,\n          created_by: userData?.email || 'unknown',\n        }]);\n\n      if (!error) {\n        setFormData({ email: '', password: '', role: 'editor' });\n        setShowAddForm(false);\n        fetchUsers();\n        alert('User created successfully');\n      }\n    } catch (error) {\n      console.error('Error adding user:', error);\n      alert(`Failed to create user: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n\n  const handleDeleteUser = async (userId: string) => {\n    if (confirm('Are you sure you want to delete this user?')) {\n      try {\n        const { error } = await supabase\n          .from('users')\n          .delete()\n          .eq('uid', userId);\n\n        if (!error) {\n          fetchUsers();\n          alert('User deleted successfully');\n        }\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        alert('Failed to delete user');\n      }\n    }\n  };\n\n  if (userData?.role !== 'admin') {\n    return (\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <h3 className=\"text-red-800 font-semibold\">Access Denied</h3>\n        <p className=\"text-red-600 mt-2\">Only administrators can manage users.</p>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-3xl font-bold text-gray-800\">Manage Users</h2>\n        <button\n          onClick={() => setShowAddForm(!showAddForm)}\n          className=\"bg-primary text-white px-4 py-2 rounded hover:bg-primary-dark transition\"\n        >\n          {showAddForm ? 'Cancel' : 'Add User'}\n        </button>\n      </div>\n\n      {/* Add User Form */}\n      {showAddForm && (\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n          <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Add New User</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary outline-none\"\n                placeholder=\"user@example.com\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                value={formData.password}\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary outline-none\"\n                placeholder=\"Min 6 characters\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Role\n              </label>\n              <select\n                value={formData.role}\n                onChange={(e) =>\n                  setFormData({ ...formData, role: e.target.value as 'admin' | 'editor' })\n                }\n                className=\"w-full px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary outline-none\"\n              >\n                <option value=\"editor\">Editor</option>\n                <option value=\"admin\">Admin</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"mt-4 flex gap-2\">\n            <button\n              onClick={handleAddUser}\n              className=\"bg-primary text-white px-6 py-2 rounded hover:bg-primary-dark transition\"\n            >\n              Create User\n            </button>\n            <button\n              onClick={() => {\n                setShowAddForm(false);\n                setFormData({ email: '', password: '', role: 'editor' });\n              }}\n              className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded hover:bg-gray-400 transition\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Users Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                Email\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                Role\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n                Created At\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-gray-200\">\n            {users.map((user) => (\n              <tr key={user.uid}>\n                <td className=\"px-6 py-4\">\n                  <div className=\"text-sm font-medium text-gray-900\">{user.email}</div>\n                </td>\n                <td className=\"px-6 py-4\">\n                  <span\n                    className={`px-2 py-1 text-xs rounded capitalize ${\n                      user.role === 'admin'\n                        ? 'bg-primary text-white'\n                        : 'bg-gray-200 text-gray-700'\n                    }`}\n                  >\n                    {user.role}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 text-sm text-gray-500\">\n                  {user.createdAt\n                    ? new Date(user.createdAt).toLocaleDateString()\n                    : 'N/A'}\n                </td>\n                <td className=\"px-6 py-4 text-right text-sm\">\n                  <button\n                    onClick={() => handleDeleteUser(user.uid)}\n                    className=\"text-red-600 hover:text-red-900\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}