{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/orionpaul/Documents/projects/rates/app/admin/dashboard/media/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Media } from '@/types';\nimport Image from 'next/image';\n\nexport default function MediaManagementPage() {\n  const [mediaItems, setMediaItems] = useState<Media[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    fetchMedia();\n  }, []);\n\n  const fetchMedia = async () => {\n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('media')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (data && !error) {\n        const mediaData = data.map(row => ({\n          id: row.id,\n          type: row.type as 'youtube' | 'image',\n          url: row.url,\n          isActive: row.is_active,\n          createdAt: new Date(row.created_at),\n          updatedBy: row.updated_by,\n        }));\n        setMediaItems(mediaData);\n      }\n    } catch (error) {\n      console.error('Error fetching media:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleYoutubeSubmit = async () => {\n    if (!youtubeUrl.trim()) return;\n\n    try {\n      // Deactivate all other media\n      await supabase\n        .from('media')\n        .update({ is_active: false })\n        .eq('is_active', true);\n\n      // Add new YouTube media\n      const { error } = await supabase\n        .from('media')\n        .insert([{\n          type: 'youtube',\n          url: youtubeUrl,\n          is_active: true,\n          updated_by: user?.email || 'unknown',\n        }]);\n\n      if (!error) {\n        setYoutubeUrl('');\n        fetchMedia();\n      }\n    } catch (error) {\n      console.error('Error adding YouTube URL:', error);\n      alert('Failed to add YouTube URL');\n    }\n  };\n\n  const handleImageUpload = async () => {\n    if (!selectedFile) return;\n\n    setUploading(true);\n    try {\n      // Upload image to Supabase Storage\n      const fileName = `${Date.now()}_${selectedFile.name}`;\n      const { error: uploadError } = await supabase\n        .storage\n        .from('ads')\n        .upload(fileName, selectedFile);\n\n      if (uploadError) throw uploadError;\n\n      // Get public URL\n      const { data: { publicUrl } } = supabase\n        .storage\n        .from('ads')\n        .getPublicUrl(fileName);\n\n      // Deactivate all other media\n      await supabase\n        .from('media')\n        .update({ is_active: false })\n        .eq('is_active', true);\n\n      // Add new image media\n      const { error } = await supabase\n        .from('media')\n        .insert([{\n          type: 'image',\n          url: publicUrl,\n          is_active: true,\n          updated_by: user?.email || 'unknown',\n        }]);\n\n      if (!error) {\n        setSelectedFile(null);\n        fetchMedia();\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleSetActive = async (id: string) => {\n    try {\n      // Deactivate all media\n      await supabase\n        .from('media')\n        .update({ is_active: false })\n        .eq('is_active', true);\n\n      // Activate selected media\n      const { error } = await supabase\n        .from('media')\n        .update({ is_active: true })\n        .eq('id', id);\n\n      if (!error) {\n        fetchMedia();\n      }\n    } catch (error) {\n      console.error('Error setting active media:', error);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    if (confirm('Are you sure you want to delete this media?')) {\n      try {\n        const { error } = await supabase\n          .from('media')\n          .delete()\n          .eq('id', id);\n\n        if (!error) {\n          fetchMedia();\n        }\n      } catch (error) {\n        console.error('Error deleting media:', error);\n      }\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-3xl font-bold text-gray-800 mb-6\">Manage Media</h2>\n\n      {/* Add Media Forms */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        {/* YouTube URL Form */}\n        <div className=\"bg-white shadow p-6\">\n          <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Add YouTube Video</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                YouTube URL\n              </label>\n              <input\n                type=\"text\"\n                value={youtubeUrl}\n                onChange={(e) => setYoutubeUrl(e.target.value)}\n                placeholder=\"https://www.youtube.com/watch?v=...\"\n                className=\"w-full px-4 py-2 border border-gray-300 focus:ring-2 focus:ring-primary outline-none\"\n              />\n            </div>\n            <button\n              onClick={handleYoutubeSubmit}\n              className=\"w-full bg-primary text-white px-4 py-2 hover:bg-primary-dark transition\"\n            >\n              Add YouTube Video\n            </button>\n          </div>\n        </div>\n\n        {/* Image Upload Form */}\n        <div className=\"bg-white shadow p-6\">\n          <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Upload Image</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Select Image\n              </label>\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => setSelectedFile(e.target.files?.[0] || null)}\n                className=\"w-full px-4 py-2 border border-gray-300 focus:ring-2 focus:ring-primary outline-none\"\n              />\n            </div>\n            <button\n              onClick={handleImageUpload}\n              disabled={!selectedFile || uploading}\n              className=\"w-full bg-primary text-white px-4 py-2 hover:bg-primary-dark transition disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {uploading ? 'Uploading...' : 'Upload Image'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Media List */}\n      <div className=\"bg-white shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-800\">All Media</h3>\n        </div>\n        <div className=\"divide-y divide-gray-200\">\n          {mediaItems.length === 0 ? (\n            <div className=\"px-6 py-8 text-center text-gray-500\">\n              No media items yet. Add a YouTube video or upload an image.\n            </div>\n          ) : (\n            mediaItems.map((media) => (\n              <div key={media.id} className=\"px-6 py-4 flex items-center justify-between\">\n                <div className=\"flex items-center gap-4 flex-1\">\n                  {media.type === 'image' && (\n                    <div className=\"relative w-24 h-16\">\n                      <Image\n                        src={media.url}\n                        alt=\"Media thumbnail\"\n                        fill\n                        className=\"object-cover\"\n                      />\n                    </div>\n                  )}\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {media.type === 'youtube' ? 'YouTube Video' : 'Image'}\n                      {media.isActive && (\n                        <span className=\"ml-2 px-2 py-1 text-xs bg-green-100 text-green-800\">\n                          Active\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1 truncate max-w-md\">\n                      {media.url}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex gap-2\">\n                  {!media.isActive && (\n                    <button\n                      onClick={() => handleSetActive(media.id)}\n                      className=\"px-3 py-1 text-sm bg-green-100 text-green-700 hover:bg-green-200 transition\"\n                    >\n                      Set Active\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDelete(media.id)}\n                    className=\"px-3 py-1 text-sm bg-blue-100 text-primary-dark hover:bg-blue-200 transition\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}