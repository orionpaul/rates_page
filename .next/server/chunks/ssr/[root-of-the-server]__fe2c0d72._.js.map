{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/orionpaul/Documents/projects/rates/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, FirebaseApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\n// Firebase configuration (Authentication Only)\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase (singleton pattern)\nlet app: FirebaseApp;\n\nif (getApps().length === 0) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\nconst auth = getAuth(app);\n\nexport { app, auth };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;;;AAEA,+CAA+C;AAC/C,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,0CAA0C;AAC1C,IAAI;AAEJ,IAAI,IAAA,6MAAO,IAAG,MAAM,KAAK,GAAG;IAC1B,MAAM,IAAA,mNAAa,EAAC;AACtB,OAAO;IACL,MAAM,IAAA,6MAAO,GAAE,CAAC,EAAE;AACpB;AAEA,MAAM,OAAO,IAAA,2OAAO,EAAC","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/orionpaul/Documents/projects/rates/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: false, // We're using Firebase Auth, not Supabase Auth\n  },\n  realtime: {\n    params: {\n      eventsPerSecond: 10, // Rate limit to prevent overwhelming the client\n    },\n  },\n  global: {\n    headers: {\n      'x-application-name': 'rates-app', // Useful for debugging\n    },\n  },\n});\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,yOAAY,EAAC,aAAa,iBAAiB;IACjE,MAAM;QACJ,gBAAgB;IAClB;IACA,UAAU;QACR,QAAQ;YACN,iBAAiB;QACnB;IACF;IACA,QAAQ;QACN,SAAS;YACP,sBAAsB;QACxB;IACF;AACF","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/orionpaul/Documents/projects/rates/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { User as FirebaseUser, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { supabase } from '@/lib/supabase';\nimport { User } from '@/types';\n\ninterface AuthContextType {\n  user: FirebaseUser | null;\n  userData: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  userData: null,\n  loading: true,\n  login: async () => {},\n  logout: async () => {},\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<FirebaseUser | null>(null);\n  const [userData, setUserData] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      setUser(firebaseUser);\n\n      if (firebaseUser) {\n        // Fetch additional user data from Supabase\n        const { data, error } = await supabase\n          .from('users')\n          .select('*')\n          .eq('uid', firebaseUser.uid)\n          .single();\n\n        if (data && !error) {\n          setUserData(data as User);\n        }\n      } else {\n        setUserData(null);\n      }\n\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const logout = async () => {\n    await signOut(auth);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, userData, loading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;AACA;AALA;;;;;;AAgBA,MAAM,4BAAc,IAAA,wPAAa,EAAkB;IACjD,MAAM;IACN,UAAU;IACV,SAAS;IACT,OAAO,WAAa;IACpB,QAAQ,WAAa;AACvB;AAEO,MAAM,UAAU,IAAM,IAAA,qPAAU,EAAC;AAEjC,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,mPAAQ,EAAsB;IACtD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,mPAAQ,EAAc;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,mPAAQ,EAAC;IAEvC,IAAA,oPAAS,EAAC;QACR,MAAM,cAAc,IAAA,sPAAkB,EAAC,yJAAI,EAAE,OAAO;YAClD,QAAQ;YAER,IAAI,cAAc;gBAChB,2CAA2C;gBAC3C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,6JAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,OAAO,aAAa,GAAG,EAC1B,MAAM;gBAET,IAAI,QAAQ,CAAC,OAAO;oBAClB,YAAY;gBACd;YACF,OAAO;gBACL,YAAY;YACd;YAEA,WAAW;QACb;QAEA,OAAO;IACT,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,MAAM,IAAA,8PAA0B,EAAC,yJAAI,EAAE,OAAO;IAChD;IAEA,MAAM,SAAS;QACb,MAAM,IAAA,2OAAO,EAAC,yJAAI;IACpB;IAEA,qBACE,gRAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAU;YAAS;YAAO;QAAO;kBACnE;;;;;;AAGP","debugId":null}}]
}